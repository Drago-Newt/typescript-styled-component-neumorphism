{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["ButtonBase","styled","button","props","size","NeumorphismButton","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAQMA,EAAaC,IAAOC,OAAV,4NAKD,SAACC,GAAD,OAAYA,EAAMC,KAAOD,EAAMC,KAAO,SAK/CC,EAAoBJ,YAAOD,EAAPC,CAAH,4RAKJ,SAACE,GAAD,OAAWA,EAAMC,QAiBrBE,EAVH,WACV,OACE,eAAC,IAAMC,SAAP,WACE,cAACF,EAAD,CAAmBD,KAAM,QAAzB,0BACA,cAACC,EAAD,CAAmBD,KAAM,MAAzB,0BACA,cAACC,EAAD,CAAmBD,KAAM,QAAzB,8BCrBSI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f935a5c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\n\ninterface BProps {\n  size: string;\n}\n\nconst ButtonBase = styled.button<BProps>`\n  height: 2em;\n  margin: 0.2em;\n  padding: 0 1em;\n  font-family: \"Space Mono\", sans-serif;\n  font-size: ${(props) => (props.size ? props.size : \"2em\")};\n  text-transform: lowercase;\n  background-color: white;\n  cursor: pointer;\n`;\nconst NeumorphismButton = styled(ButtonBase)`\n  border: none;\n  margin: 0.8em;\n  padding: 10px;\n  background: #ebecf0;\n  border-radius: ${(props) => props.size};\n  box-shadow: 20px 20px 60px #c1c1c1, -20px -20px 60px #efecec;\n  &:hover {\n    box-shadow: inset 3px 3px 5px #bbbbbb, inset -3px -3px 5px #ffffff;\n  }\n`;\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <NeumorphismButton size={\"1.5em\"}>ðŸ’›</NeumorphismButton>\n      <NeumorphismButton size={\"2em\"}>ðŸ§¡</NeumorphismButton>\n      <NeumorphismButton size={\"1.5em\"}>ðŸ’š</NeumorphismButton>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}